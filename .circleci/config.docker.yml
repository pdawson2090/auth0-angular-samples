## CircleCI Config with Docker Executor
# Environment variables to be defined in the build configuration:
# AUTH0_TEST_CLIENT_ID = Client id to use in test
# AUTH0_TEST_DOMAIN = Domain to use in test

version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.10-stretch-browsers
    environment:
      - WEBAPP_URL: http://localhost:3000
    
    steps:
      # Depending on the project, the sample in-test might be in a subfolder.
      - checkout

      - run:
          # This could be our own script receiving the 2 values and the fullpath
          name: Replace Auth0 test credentials
          command: |
            mv $AUTH0_CFG.example $AUTH0_CFG
            sed -i 's/{CLIENT_ID}/'$AUTH0_TEST_CLIENT_ID'/g' $AUTH0_CFG
            sed -i 's/{DOMAIN}/'$AUTH0_TEST_DOMAIN'/g' $AUTH0_CFG
          environment:
            - AUTH0_CFG: 01-Login/src/app/auth/auth0-variables.ts # Find a universal way to search for it

      # Get from app/cache
      - restore_cache:
         keys:
           - app-{{ checksum "01-Login/package.json" }}
      - run:
          name: Build pull request
          command: npm install
          working_directory: 01-Login
      # Save to app/cache
      - save_cache:
          key: app-{{ checksum "01-Login/package.json" }}
          paths:
            - "01-Login/node_modules"
      - run:
          name: Run pull request
          command: npm start
          background: true
          working_directory: 01-Login

      - run:
          name: Wait for app to be available
          command: sleep 10 ; curl --retry 7 --retry-connrefused http://localhost:3000 

      # Get from test/cache
      - run:
          name: Prepare tests
          command: git clone https://github.com/lbalmaceda/webapp-tests-scripts scripts
      - restore_cache:
         keys:
           - test-{{ checksum "scripts/package.json" }}
      - run:
          command: npm install
          working_directory: scripts
      # Save to test/cache
      - save_cache:
          key: test-{{ checksum "scripts/package.json" }}
          paths:
            - "scripts/node_modules"
      - run:
          name: Run tests
          command: ./node_modules/.bin/codeceptjs run-multiple --all --steps
          working_directory: scripts

      - store_artifacts:
          path: scripts/out